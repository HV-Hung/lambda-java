name: Package Java projects

on:
  push:
    branches-ignore:
      - main
  workflow_dispatch:
env:
  FUNCTIONS_DIR: functions
jobs:
  changes:
    runs-on: ubuntu-latest
    name: detect-changes
    outputs:
      # working-dir: ${{ steps.detect.outputs.changes }}
      working-dir: ${{ steps.detect.outputs.functions }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Output function list
        id: detect
        run: |
          functions_dirs=$(find $FUNCTIONS_DIR -maxdepth 1 -mindepth 1 -type d -print | cut -d'/' -f2 | jq -R . | jq -s . )
          echo functions=$functions_dirs >> $GITHUB_OUTPUT
      # - uses: dorny/paths-filter@v3
      #   id: detect
      #   with:
      #     filters: "{\"hello-world\":\"functions/hello-world/**\",\"hello-world-2\":\"functions/hello-world-2/**\"}"
      #     base: main
      - name: Echo working directory
        run: echo ${{ steps.detect.outputs.functions }}
  package:
    runs-on: ubuntu-latest
    needs: changes
    # if: needs.changes.outputs.working-dir != '[]'
    strategy:
      matrix:
        working-directory: ${{ fromJSON(needs.changes.outputs.working-dir) }}
      max-parallel: 1
  
    steps:
      - name: "Install tools"
        shell: bash
        run: |
          pip install --no-cache-dir --upgrade --quiet jq yq
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up working directory
        run: |
          echo "WORK_DIR=${{ env.FUNCTIONS_DIR }}/${{ matrix.working-directory }}" >> $GITHUB_ENV

      - name: Function version
        run: |
          cd $WORK_DIR
          VERSION=$([[ -f "pom.xml" ]] && xq -r -e '.project.version // empty' pom.xml | sed s/"-SNAPSHOT"// || echo "")
          echo "VERSION=${VERSION}" >> $GITHUB_ENV
          echo "WORK_DIR=${WORK_DIR}" >> $GITHUB_ENV
      - name: Echo info
        run: |
          echo $VERSION
          echo $WORK_DIR
      
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'zulu'

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Build with Maven
        working-directory: ${{ env.WORK_DIR }}
        run: mvn package

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.working-directory }}
          path: |
            ${{ env.WORK_DIR }}/target/${{ matrix.working-directory }}-${{ env.VERSION }}.jar
